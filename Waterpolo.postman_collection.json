{
	"info": {
		"_postman_id": "be6880c7-b9f1-4e22-ab69-49a02a70fa51",
		"name": "Waterpolo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n    \"email\":\"test@example.com\",\r\n    \"name\":\"Jane Doe\",\r\n    \"password\" :\"waterpolo\",\r\n    \"passwordConfirmation\": \"waterpolo\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);\r",
									"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"productId\", jsonData.productId);",
									"",
									"",
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Canon EOS 1500D DSLR Camera with 18-55mm Lens\",\n    \"description\": \"Designed for first-time DSLR owners who want impressive results straight out of the box, capture those magic moments no matter your level with the EOS 1500D. With easy to use automatic shooting modes, large 24.1 MP sensor, Canon Camera Connect app integration and built-in feature guide, EOS 1500D is always ready to go.\",\n    \"price\": 879.99,\n    \"image\": \"https://i.imgur.com/QlRphfQ.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/products",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A post title\",\n    \"body\": \"Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/products/{{productId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Canon EOS 1500D DSLR Camera with 18-55mm Lens\",\n    \"description\": \"Designed for first-time DSLR owners who want impressive results straight out of the box, capture those magic moments no matter your level with the EOS 1500D. With easy to use automatic shooting modes, large 24.1 MP sensor, Canon Camera Connect app integration and built-in feature guide, EOS 1500D is always ready to go.\",\n    \"price\": 699.99,\n    \"image\": \"https://i.imgur.com/QlRphfQ.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/products/{{productId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']",
									"",
									"if(newAccessToken){",
									"    console.log('Set new access token')",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"A post title\",\n    \"body\": \"Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text Some HTML text\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/products/{{productId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Get metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9100/metrics",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9100",
							"path": [
								"metrics"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Match",
			"item": [
				{
					"name": "New Request",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/healthcheck/route",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"healthcheck",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"matchId\", jsonData.matchId);\r",
									"\r",
									"\r",
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"homeTeam\": \"AZS-UW\",\r\n    \"guestTeam\": \"WTS-BYTOM\",\r\n    \"date\": \"09-02-2022\",\r\n    \"place\":\"Warszawa\",\r\n    \"homeScore\": 10,\r\n    \"guestScore\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/match",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"match"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/match/{{matchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"match",
								"{{matchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Match All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/match/all",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"match",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"homeScore\": 25,\r\n    \"guestScore\": 7\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/match/{{matchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"match",
								"{{matchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/match/{{matchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"match",
								"{{matchId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Player",
			"item": [
				{
					"name": "Create Player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"playerId\", jsonData.playerId);\r",
									"\r",
									"\r",
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Nera\",\r\n    \"isGoalkeeper\": false,\r\n    \"number\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/player",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"player"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/player/{{playerId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"player",
								"{{playerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"isGoalkeeper\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/player/{{playerId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"player",
								"{{playerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/match/{{matchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"match",
								"{{matchId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PlayerMatch",
			"item": [
				{
					"name": "Create Player-Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"playerMatchId\", jsonData.playerMatchId);\r",
									"\r",
									"\r",
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"playerId\":\"{{playerId}}\",\r\n    \"matchId\": \"{{matchId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/player-match",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"player-match"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Player-Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/player-match/{{playerMatchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"player-match",
								"{{playerMatchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Many Player-Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/player-match/all?onField=0&&playerMatchId={{playerMatchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"player-match",
								"all"
							],
							"query": [
								{
									"key": "onField",
									"value": "0"
								},
								{
									"key": null,
									"value": null
								},
								{
									"key": "playerMatchId",
									"value": "{{playerMatchId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Player-Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"onField\": true,\r\n    \"entryTime\": [\"00:00\",\"08:10\"],\r\n    \"exitTime\": [\"05:10\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/player-match/{{playerMatchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"player-match",
								"{{playerMatchId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Player-Match",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const newAccessToken = responseHeaders['x-access-token']\r",
									"\r",
									"if(newAccessToken){\r",
									"    console.log('Set new access token')\r",
									"postman.setEnvironmentVariable(\"accessToken\", newAccessToken);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{endpoint}}/api/match/{{matchId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"match",
								"{{matchId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "email",
			"value": "test@example.com"
		},
		{
			"key": "password",
			"value": "waterpolo"
		},
		{
			"key": "name",
			"value": "Jane Doe"
		},
		{
			"key": "accessToken",
			"value": "<accessToken will be set when you create a session>"
		},
		{
			"key": "refreshToken",
			"value": "<refreshToken will be set when you create a session>"
		},
		{
			"key": "endpoint",
			"value": "http://localhost:1337"
		},
		{
			"key": "productId",
			"value": "<productId will be set when you create a session>"
		}
	]
}